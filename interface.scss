:root {
  --xsmall-custom-text: 1rem;
  --small-custom-text: clamp(1rem, 1vw, 2rem);
  --medium-custom-text: clamp(1.5rem, 3vw, 5rem);
  --medium-big-custom-text: clamp(2rem, 4vw, 6rem);
  --big-custom-text: clamp(2rem, 7vw, 10rem);
  --black-900: rgb(20, 20, 20);
  --golden: rgb(237, 203, 177);
  --green: rgb(96, 153, 45);
  --fucsia: rgb(170, 62, 152);
  --primary-font: "Montserrat", sans-serif;
  --secondary-font: 'Karla', sans-serif;
  --primary-900: hsl(214, 41%, 10%);
  --primary-700: hsl(214, 41%, 30%);
  --primary-400: hsl(214, 41%, 60%);
  --primary-200: hsl(214, 41%, 80%);
  --accent-800: hsl(359, 100%, 20%);
  --accent-600: hsl(359, 100%, 40%);
  --accent-300: hsl(359, 100%, 70%);
  --accent-100: hsl(359, 100%, 90%);
}

html {
  width: 100%;
}

*,
*::after,
*::before {
  box-sizing: border-box;
}

body {
  background: hsl(224, 32%, 12%);
  background-image: conic-gradient(
    from 0deg at 50% 50%,
    var(--black-900),
    var(--primary-700),
    var(--primary-400),
    var(--primary-400),
    var(--primary-700),
    var(--black-900)
  );
  background-size: 200%;
  background-blend-mode: multiply;
  animation: background-pan 30s linear infinite;
  margin: 0;
  color: white;
  min-block-size: 100dvh;
  font-family: var(--primary-font);
  user-select: none;
  overflow-x: hidden;
  transition: opacity 500ms ease;
}

body.fade-out {
  opacity: 0;
}

body::-webkit-scrollbar {
  height: 3px;
}

.body::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(80, 80, 80, 0.75);
}

.loadingPage {
  position: absolute;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  background-image: linear-gradient(to right, var(--golden), var(--black-900), var(--golden));
  background-size: 200%;
  animation: background-pan 2s linear infinite;
  z-index: 999;
  font-size: var(--big-custom-text);
}

.toast-container {
  position: fixed;
  margin: 10px;
  width: 250px;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.toast-container[data-position^="top-"] {
  top: 0;
}

.toast-container[data-position$="-left"] {
  left: 0;
}

.toast-container[data-position^="bottom-"] {
  bottom: 0;
}

.toast-container[data-position$="-right"] {
  right: 0;
}

.toast-container[data-position$="-center"] {
  left: 50%;
  transform: translateX(50%);
}

.PopUp {
  padding: 1rem;
  background: var(--light-black);
  border-radius: 0.25em;
  position: relative;
  font-size: var(--xsmall-custom-text);
  width: 100%;
  cursor: pointer;
}

/* 
.PopUpAchievementText {
  background-image: linear-gradient(to right,
      var(--golden),
      white,
      var(--golden));
  background-size: 200%;
  animation: background-pan 2s linear infinite;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
} */

.PopUp::before {
  content: "\00D7";
  position: absolute;
  top: 2px;
  right: 5px;
}

/* .PopUp::after {
  content: "";
  position: absolute;
  border-radius: inherit;
  inset: -0.5rem;
  transform: scale(1.1);
  background-image: linear-gradient(to right,
      var(--golden),
      var(--light-black),
      var(--golden));
  background-size: 200%;
  animation: background-pan 2s linear infinite;
  z-index: -1;
} */

.lettersPerSecond {
  font-size: var(--small-custom-text);
  margin: 0;
}

.wordWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.wordBox {
  background-color: transparent;
  border-radius: 50px;
  border-color: rgb(120, 120, 120);
  color: white;
  width: clamp(5rem, 20vw, 50rem);
  font-size: var(--medium-custom-text);
  font-family: var(--primary-font);
  padding-left: 2rem;
}

.gameButtonWrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.gameButton {
  font-size: var(--small-custom-text);
  cursor: default;
}

.pointsCounter {
  font-size: var(--medium-custom-text);
  text-align: center;
  margin: 0;
}

button {
  background-color: transparent;
  color: white;
  border-color: transparent;
  font-family: var(--primary-font);
}

.multiUpgradesButtons {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  font-size: var(--medium-custom-text);
  text-align: center;
}

.multiUpgrade {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  padding-block: 2rem;
  width: 20vw;
  aspect-ratio: 5 / 6;
  font-family: var(--secondary-font);
  font-size: var(--medium-custom-text);
  border-radius: 3rem;
  background: var(--primary-900);
  overflow: hidden;
}

.multiUpgrade > p {
  z-index: 1;
}

.multiUpgrade::after {
  content: '';
  position: absolute;
  transition: background-position 250ms ease, transform 250ms ease;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, var(--primary-700), var(--primary-200));
  background-position: 0%;
  background-size: 200%;
  inset: -50%;
}

.multiUpgrade:hover::after {
  background-position: 100%;
  transform: rotate(180deg);
}

.passivePointsWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  padding: 0 2rem;
  gap: 10rem;
  text-align: center;
  max-width: 100%;
}

@media (max-width: 1423px) {
  .passivePointsWrapper {
    gap: 1rem;
  }
}

.passivePointsLeft {
  font-size: var(--medium-custom-text);
  padding: 0 1rem;
}

.passivePointsWord {
  width: 100vw;
}

.passivePointsRight {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
  font-size: var(--small-custom-text);
}

.passivePointsRight > button,
.passivePointsRight > p {
  margin: 1rem 0;
  font-size: var(--small-custom-text);
}

.upgradesTable {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  place-items: center;
  gap: 1rem;
}

.upgradesTable > Button {
  font-size: var(--small-custom-text);
}

.upgradeText {
  margin-top: 3rem;
  text-align: center;
}

.upgradesTitle,
.upgradeDesc {
  margin: 0;
}

.upgradesTitle {
  font-size: var(--small-custom-text);
}

.upgradesDesc {
  font-size: var(--xsmall-custom-text);
}

.upgradeWrapper {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 4rem;
}

.upgradeTypeWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.upgradeTypeWrapper > h2 {
  font-size: var(--small-custom-text);
}

.upgradeTypeWrapper > .upgradesDesc {
  font-size: var(--xsmall-custom-text);
  text-align: center;
}

.wordToGuessContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.wordToGuess {
  color: white;
  text-shadow: 0 0 0.25em currentColor;
  font-size: var(--big-custom-text);
  margin: 0;
}

.wordToGuessWrapper {
  transition: transform 100ms ease-in-out;
  animation: background-pan 2s linear infinite;
  background: linear-gradient(to right, gray, white, gray);
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

.wordToGuessWrapper.expand {
  transform: scale(1.3);
}

.wordsContainer {
  color: rgba(150, 150, 150, 0.5);
  font-size: var(--small-custom-text);
  display: grid;
  justify-content: center;
  align-items: center;
  grid-template-columns: repeat(5, 1fr);
  text-align: center;
  white-space: nowrap;
  gap: 3rem;
  margin-top: 1rem;
}

@media (max-width: 768px) {
  .wordsContainer > :first-child,
  .wordsContainer > :last-child {
    display: none;
  }

  .wordsContainer {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 425px) {
  .wordsContainer > :nth-child(1),
  .wordsContainer > :nth-child(2),
  .wordsContainer > :nth-last-child(1),
  .wordsContainer > :nth-last-child(2) {
    display: none;
  }

  .wordsContainer {
    grid-template-columns: 1fr;
  }
}

.tabsContainer {
  display: flex;
  justify-content: space-between;
  gap: 4rem;
  padding: 0 2rem;
  overflow-y: hidden;
}

.tabsContainer::-webkit-scrollbar {
  height: 3px;
}

.tabsContainer::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(80, 80, 80, 0.75);
}

.hoverEffectContainer:hover > .hoverEffectChild {
  opacity: 0.3;
  cursor: default;
}

.hoverEffectContainer:hover > .hoverEffectChild:hover {
  opacity: 1;
  transform: scale(1.1);
}

.hoverEffectChild {
  transition: opacity 400ms ease;
  transition: transform 50ms ease-in;
}

.menuButton {
  font-size: var(--medium-custom-text);
}

.cardsHeaderContainer {
  display: flex;
  justify-content: center;
  position: relative;
  text-align: center;
}

.cardsHeaderContainer > button {
  font-size: var(--medium-custom-text);
}

.cardsHeaderContainer:hover > .cardsButton {
  color: black;
}

.cardsHeaderContainer:hover:before {
  transition: width 250ms ease;
  width: 100%;
}

.cardsHeaderContainer:before {
  transition: width 250ms ease;
  background: linear-gradient(to right, transparent, var(--golden) var(--color-percent), rgb(240, 240, 240));
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  z-index: -1;
}

.cardsButton {
  animation: background-pan 2s linear infinite;
  background: linear-gradient(to right, var(--black-900), var(--golden), var(--black-900));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  opacity: 0;
  transition: opacity 250ms ease;
  pointer-events: none;
  z-index: 10;
}

.overlay.show {
  opacity: 0.9;
  pointer-events: all;
}

.light {
  position: fixed;
  width: 50vw;
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: white;
  pointer-events: none;
  z-index: 9999;
  opacity: 0;
  transition: opacity 500ms ease;
  filter: blur(10rem);
}

.light.show {
  opacity: 0.25;
}

.viewerCardsContainer {
  z-index: 100;
  position: absolute;
  top: -50%;
  left: 50%;
  display: grid;
  place-items: center;
  transition: top 200ms cubic-bezier(0.15, 0.72, 0.2, 0.83);
}

.singleCard {
  --degrees: -5deg;
  --offset: -20%;

  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(255, 255, 255, 1);
  width: 40vmin;
  aspect-ratio: 5/7;
  border-radius: 1vmin;
  font-size: var(--medium-custom-text);
  font-family: var(--secondary-font);
  text-transform: uppercase;
  color: var(--black-900);
  text-align: center;
  transition: transform 200ms cubic-bezier(0.15, 0.72, 0.2, 0.83);
  transform: translateX(var(--offset)) rotate(var(--degrees));
}

@for $i from 0 through 20 {
  .singleCard:nth-child(#{$i + 1}) {
    --degrees: #{($i - 5) + "deg"};
    --offset: #{($i * 5 - 20) + "%"};
  }

  .viewerCardsContainer:hover > .singleCard:nth-child(#{$i + 1}) {
    --degrees: #{(($i - 5) * 3) + "deg"};
    --offset: #{(($i * 5 - 20) * 3) + "%"};
  }
}

.viewerActive {
  top: 50%;
}

.cardsContainer {
  margin-top: 1rem;
  padding: 0 1rem;
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(7rem, 1fr));
}

.normalCard {
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(255, 255, 255, 1);
  aspect-ratio: 5/7;
  border-radius: 1vmin;
  font-size: var(--small-custom-text);
  color: var(--black-900);
  text-align: center;
}

.commonCard {
  border: 5px solid var(--green);
  background: var(--green);
}

.uncommonCard {
  border: 5px solid var(--primary-400);
  background: var(--primary-400);
}

.epicCard {
  border: 5px solid var(--fucsia);
  background: linear-gradient(to bottom, var(--fucsia), var(--black-900), var(--fucsia));
  color: var(--fucsia);
}

.legendaryCard {
  animation: background-pan 2s linear infinite;
  border: 5px solid var(--golden);
  background: linear-gradient(to bottom, var(--golden), var(--black-900), var(--golden));
  color: rgb(240, 240, 240);
}

.cardBonus {
  margin-top: 1rem;
  text-align: center;
  font-size: var(--small-custom-text);
}

.challengeProgress {
  position: absolute;
  z-index: -9;
  background: rgb(255, 255, 255);
  opacity: 0.2;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  transition: opacity 400ms ease, background-color 100ms ease-out, width 500ms ease;
}

.challengeProgress.red {
  background: rgb(255, 0, 0);
}

.challengeProgress.green {
  background: rgb(0, 255, 0);
}

.challengeProgress.hide {
  opacity: 0;
  width: 0%;
}

.challengeTimer {
  margin: 1rem 0 0 0;
  font-size: var(--medium-custom-text);
  transition: transform 250ms ease-out;
  display: none;
}

.challengeTimer.show {
  display: block;
}

.challengeTimer.expand {
  transform: scale(1.3);
}

.challengeTimer.success {
  background: linear-gradient(to right, var(--green), var(--black-900), var(--green));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: background-pan 2s linear infinite;
}

.challengesContainerWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.challengesContainerWrapper > button {
  font-size: var(--small-custom-text);
}

.challengeReward {
  background: linear-gradient(to right, var(--green), var(--primary-400), var(--golden), var(--fucsia), var(--green));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: background-pan 2s linear infinite;
}

.exitChallengeButton {
  margin-top: 1rem;
  text-align: center;
  font-size: var(--medium-custom-text);
  transition: transform 200ms ease;
}

.exitChallengeButton:hover {
  transform: scale(1.25);
}

.prestigePointsContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  font-size: var(--medium-custom-text);
  text-align: center;
}

.prestigePointsContainer > p {
  margin: 1rem 0;
}

.prestigePointsContainer > button {
  font-size: var(--big-custom-text);
}

.prestigeProgressContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.statsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  font-size: var(--small-custom-text);
}

.statsContainer > p {
  margin: 1rem 0;
}

.optionsContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: var(--small-custom-text);
}

.fontContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}

.fontContainer > p {
  margin: 1rem;
}

.fontSelector {
  appearance: none;
  pointer-events: none;
  text-align: center;
  background-color: transparent;
  color: white;
  font-family: var(--primary-font);
  border: none;
}

.achievementContainer {
  margin: 1rem;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(5rem, 1fr));
  font-size: var(--small-custom-text);
  text-align: center;
  gap: 1rem;
}

.achievement {
  aspect-ratio: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.achievement.unlocked {
  background: linear-gradient(45deg, rgb(40, 40, 40), var(--black-900), var(--golden));
  box-shadow: 0 0 0.3rem white;
}

@keyframes background-pan {
  from {
    background-position: 0% center;
  }

  to {
    background-position: -200% center;
  }
}

@keyframes scale {
  from,
  to {
    transform: scale(0);
  }

  50% {
    transform: scale(1);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(180deg);
  }
}
