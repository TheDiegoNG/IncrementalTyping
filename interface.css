:root {
  --xsmall-custon-text: clamp(0.5rem, 0.5vw, 1rem);
  --small-custom-text: clamp(1rem, 1vw, 2rem);
  --medium-custom-text: clamp(2rem, 3vw, 5rem);
  --big-custom-text: clamp(5rem, 7vw, 10rem);
  --light-black: rgb(20, 20, 20);
  --golden: rgb(237, 203, 177);
  --green: rgb(96, 153, 45);
  --blue: rgb(108, 145, 194);
  --fucsia: rgb(170, 62, 152);
  --primary-font: 'Montserrat', sans-serif;
}

body {
  background: hsl(224, 32%, 12%);
  background-image: conic-gradient(from 0deg at 50% 50%,
      var(--light-black),
      var(--blue),
      var(--blue),
      var(--light-black));
  background-size: 200%;
  background-blend-mode: multiply;
  animation: background-pan 30s linear infinite;
  margin: 0px;
  color: white;
  min-block-size: 100dvh;
  font-family: var(--primary-font);
  user-select: none;
  overflow-x: hidden;
  transition: opacity 500ms ease;
}

body.fade-out {
  opacity: 0;
}


body::-webkit-scrollbar {
  height: 3px;
}

.body::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(80, 80, 80, 0.75);
}

.backgroundPolkadot {
  position: absolute;
  z-index: -10;
  background: radial-gradient(rgba(255, 255, 255, 0.15) 8%,
      transparent 8%);
  background-position: 0% 0%;
  background-size: 5vmin 5vmin;
  height: 100%;
  width: 100%;
}

.PopUp {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 15vw;
  height: 5vh;
  border-radius: 0 10px 10px 0;
  background: var(--light-black);
  top: 10vh;
  left: -20vw;
  transition: left 1s ease-out;
  text-align: center;
}

.PopUpAchievementText {
  background-image: linear-gradient(to right,
      var(--golden),
      white,
      var(--golden));
  background-size: 200%;
  animation: background-pan 2s linear infinite;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

.PopUp::after {
  content: "";
  position: absolute;
  border-radius: inherit;
  inset: -0.5rem;
  transform: scale(1.1);
  background-image: linear-gradient(to right,
      var(--golden),
      var(--light-black),
      var(--golden));
  background-size: 200%;
  animation: background-pan 2s linear infinite;
  z-index: -1;
}

.PopUp.Achievement {
  height: 10vh;
}

.PopUp.show,
.PopUp.Achievement.show {
  left: 0;
}

.lettersPerSecond {
  font-size: var(--small-custom-text);
}

.wordWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.wordBox {
  background-color: transparent;
  border-radius: 50px;
  border-color: rgb(120, 120, 120);
  color: white;
  width: 20vw;
  font-size: var(--medium-custom-text);
  font-family: var(--primary-font);
  padding-left: 2rem;
}

.gameButtonWrapper {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.gameButton {
  font-size: var(--small-custom-text);
  cursor: default;
}

.pointsCounter {
  font-size: var(--medium-custom-text);
}

button {
  background-color: transparent;
  color: white;
  border-color: transparent;
  font-family: var(--primary-font);
}

.multiUpgradesContainer {
  display: flex;
  justify-content: center;
  gap: 1rem;
  text-align: center;
}

.multiUpgradesButtons {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-items: center;
  gap: 1rem;
  font-size: var(--small-custom-text);
}

.passivePointsWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10rem;
  text-align: center;
}

.passivePointsLeft {
  font-size: var(--medium-custom-text);
}

.passivePointsRight {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
  font-size: var(--small-custom-text);
}

.upgradesTable {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
  place-items: center;
  gap: 1rem;
  font-size: var(--small-custom-text);
}

.upgradeWrapper {
  display: flex;
  justify-content: center;
  gap: clamp(2rem, 10rem, 15rem);

}

.upgradeTypeWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 10vw;
}

.upgradeTypeWrapper>h2 {
  font-size: var(--small-custom-text);
}

.upgradeTypeWrapper>.upgradesDesc {
  font-size: var(--xsmall-custon-text);
  text-align: center;
}

.wordToGuessContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.wordToGuess {
  font-size: var(--big-custom-text);
  text-shadow: 0 0 0.3em currentColor;
}

.tabsContainer {
  display: flex;
  justify-content: space-between;
  gap: 4rem;
  padding: 0 2rem;
  overflow-y: hidden;
  overflow-x: scroll;
}

.tabsContainer::-webkit-scrollbar {
  height: 3px;
}

.tabsContainer::-webkit-scrollbar-thumb {
  border-radius: 10px;
  background: rgba(80, 80, 80, 0.75);
}


.hoverEffectContainer:hover>.hoverEffectChild {
  opacity: 0.3;
  cursor: default;
}

.hoverEffectContainer:hover>.hoverEffectChild:hover {
  opacity: 1;
  transform: scale(1.1);
}

.hoverEffectChild {
  transition: opacity 400ms ease;
  transition: transform 50ms ease-in;
}

.menuButton {
  font-size: var(--medium-custom-text);
}

.cardsHeaderContainer {
  display: flex;
  justify-content: center;
  position: relative;
  text-align: center;
  font-size: var(--medium-custom-text);
}

.cardsHeaderContainer:hover>.cardsButton {
  color: black;
}

.cardsHeaderContainer:hover:before {
  transition: width 250ms ease;
  width: 100%;
}

.cardsHeaderContainer:before {
  transition: width 250ms ease;
  background: linear-gradient(to right,
      transparent,
      var(--golden) var(--color-percent),
      rgb(240, 240, 240));
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  z-index: -1;
}

.cardsButton {
  animation: background-pan 2s linear infinite;
  background: linear-gradient(to right,
      var(--light-black),
      var(--golden),
      var(--light-black));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  white-space: nowrap;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: black;
  opacity: 0;
  transition: opacity 250ms ease;
  pointer-events: none;
  z-index: 10;
}

.overlay.show {
  opacity: 0.9;
  pointer-events: all;
}

.light {
  position: fixed;
  width: 50vw;
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: white;
  pointer-events: none;
  z-index: 9999;
  opacity: 0;
  transition: opacity 500ms ease;
  filter: blur(10rem);
}

.light.show {
  opacity: 0.25;
}

.viewerCardsContainer {
  z-index: 100;
  position: absolute;
  top: -50%;
  left: 50%;
  display: grid;
  place-items: center;
  transition: top 200ms cubic-bezier(.15, .72, .2, .83)
}

.singleCard {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(255, 255, 255, 1);
  width: 40vmin;
  aspect-ratio: 5/7;
  border-radius: 1vmin;
  font-size: var(--medium-custom-text);
  font-family: 'Saira Condensed', sans-serif;
  color: var(--light-black);
  text-align: center;
  transition: transform 200ms cubic-bezier(.15, .72, .2, .83);
}

.singleCard:nth-child(1) {
  transform: translateX(-20%) rotate(-5deg);
}

.singleCard:nth-child(2) {
  transform: translateX(-15%) rotate(-4deg);
}

.singleCard:nth-child(3) {
  transform: translateX(-10%) rotate(-3deg);
}

.singleCard:nth-child(4) {
  transform: translateX(-5%) rotate(-2deg);
}

.singleCard:nth-child(5) {
  transform: rotate(-1deg);
}

.singleCard:nth-child(6) {
  transform: translateX(5%)
}

.singleCard:nth-child(7) {
  transform: translateX(10%) rotate(1deg);
}

.singleCard:nth-child(8) {
  transform: translateX(15%) rotate(2deg);
}

.singleCard:nth-child(9) {
  transform: translateX(20%) rotate(3deg);
}

.singleCard:nth-child(10) {
  transform: translateX(25%) rotate(4deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(1) {
  transform: translateX(-60%) rotate(-15deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(2) {
  transform: translateX(-45%) rotate(-12deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(3) {
  transform: translateX(-30%) rotate(-9deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(4) {
  transform: translateX(-15%) rotate(-6deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(5) {
  transform: rotate(-3deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(6) {
  transform: translateX(15%)
}

.viewerCardsContainer:hover>.singleCard:nth-child(7) {
  transform: translateX(30%) rotate(3deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(8) {
  transform: translateX(45%) rotate(6deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(9) {
  transform: translateX(60%) rotate(9deg);
}

.viewerCardsContainer:hover>.singleCard:nth-child(10) {
  transform: translateX(75%) rotate(12deg);
}

.viewerActive {
  top: 50%;
}

.cardsContainer {
  margin-top: 1rem;
  padding: 0 1rem;
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(9, 1fr);
}

.normalCard {
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(255, 255, 255, 1);
  aspect-ratio: 5/7;
  border-radius: 1vmin;
  font-size: var(--small-custom-text);
  color: var(--light-black);
  text-align: center;
}

.commonCard {
  border: 5px solid var(--green);
  background: var(--green);
}

.uncommonCard {
  border: 5px solid var(--blue);
  background: var(--blue);
}

.epicCard {
  border: 5px solid var(--fucsia);
  background: linear-gradient(to bottom,
      var(--fucsia),
      var(--light-black),
      var(--fucsia));
  color: var(--fucsia);
}

.legendaryCard {
  animation: background-pan 2s linear infinite;
  border: 5px solid var(--golden);
  background: linear-gradient(to bottom,
      var(--golden),
      var(--light-black),
      var(--golden));
  color: rgb(240, 240, 240);
}

.cardBonus {
  margin-top: 1rem;
  text-align: center;
  font-size: var(--small-custom-text);
}

.challengeProgress {
  position: absolute;
  z-index: -9;
  background: rgb(255, 255, 255);
  opacity: 0.2;
  left: 0;
  top: 0;
  height: 100%;
  width: 0%;
  transition: opacity 400ms ease, background-color 100ms ease-out, width 500ms ease;
}

.challengeProgress.red {
  background: rgb(255, 0, 0);
}

.challengeProgress.green {
  background: rgb(0, 255, 0);
}

.challengeProgress.hide {
  opacity: 0;
  width: 0%;
}

.challengeTimer {
  margin-top: 1rem;
  font-size: var(--medium-custom-text);
  transition: transform 250ms ease-out;
}

.challengeTimer.expand {
  transform: scale(1.3);
}

.challengeTimer.success {
  background: linear-gradient(to right,
      var(--green),
      var(--light-black),
      var(--green));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: background-pan 2s linear infinite;
}

.challengesContainerWrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  font-size: var(--small-custom-text);
}

.challengeReward {
  background: linear-gradient(to right,
      var(--green),
      var(--blue),
      var(--golden),
      var(--fucsia),
      var(--green));
  background-size: 200%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: background-pan 2s linear infinite;
}

.exitChallengeButton {
  margin-top: 1rem;
  text-align: center;
  font-size: var(--medium-custom-text);
  transition: transform 200ms ease;
}

.exitChallengeButton:hover {
  transform: scale(1.25);
}


.prestigePointsContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  font-size: var(--medium-custom-text);
}

.prestigeButtonWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: var(--big-custom-text)
}

.prestigeProgressContainer {
  display: flex;
  justify-content: space-between;
  width: 100%;
}

.statsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  font-size: var(--small-custom-text);
}

.optionsContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: var(--small-custom-text);
}

.fontSelector {
  appearance: none;
  pointer-events: none;
  text-align: center;
  background-color: transparent;
  color: white;
  font-family: var(--primary-font);
  border: none;
}

.achievementContainer {
  margin-top: 1rem;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10vw, 1fr));
  font-size: var(--small-custom-text);
  text-align: center;
}

.achievement {
  aspect-ratio: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.achievement.unlocked {
  background: linear-gradient(45deg,
      rgb(40, 40, 40),
      var(--light-black),
      var(--golden));
  box-shadow: 0 0 0.3rem white;
}


@keyframes background-pan {
  from {
    background-position: 0% center;
  }

  to {
    background-position: -200% center;
  }
}

@keyframes scale {

  from,
  to {
    transform: scale(0);
  }

  50% {
    transform: scale(1);
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(180deg);
  }
}